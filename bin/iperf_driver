#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
iperf_driver.py: Implementation of iperf driver for WiSHFUL agent

Usage:
   iperf_driver.py [options] [-q | -v]
   iperf_driver.py --config

Options:
   -f                               foo
   -i, --interface interface        interfaces
   -p, --port port                  port for communication with server

Other options:
   -h, --help          show this help message and exit
   -q, --quiet         print less text
   -v, --verbose       print more text
   --version           show version and exit
"""

import logging
import time
import zmq
import random
import sys

__author__ = "Piotr Gawlowicz, Mikolaj Chwalisz"
__copyright__ = "Copyright (c) 2015, Technische UniversitÃ¤t Berlin"
__version__ = "0.1.0"
__email__ = "{gawlowicz, chwalisz}@tkn.tu-berlin.de"


def start_server():
    log = logging.getLogger('iperf_driver.main')
    log.debug("iperf driver starts server")
    msgType = "IPERF_RESPONSE"
    msg = "START_SERVER_OK"
    response = [msgType, msg]
    return response

def start_client():
    log = logging.getLogger('iperf_driver.main')
    log.debug("iperf driver starts client")
    msgType = "IPERF_RESPONSE"
    msg = "START_CLIENT_OK"
    response = [msgType, msg]
    return response


def process_msg(socket):
     while True:
            msg = socket.recv_multipart()
            msgType = ""
            if len(msg) > 1:
                msgType = msg[0]
                msg = msg[1]
            else:
                msg = msg[0]
            log = logging.getLogger('iperf_driver.main')
            log.debug("iperf driver recived msg: {0}::{1}".format(msgType, msg))

            log.debug("iperf driver process msg: {0}::{1}".format(msgType, msg))

            #TODO: get msg type
            response = None
            command = msg
            if command == "START_SERVER":
                response = start_server()
            elif command == "START_CLIENT":
                response = start_client()

            if response:
                log.debug("iperf driver sends response: {0}".format(response))
                socket.send_multipart(response)


def main(args):
    log = logging.getLogger('iperf_driver.main')
    log.debug(args)

    port = args['--port']
    interfaces = args['--interface']

    #Connect to WiSHFUL Agent
    context = zmq.Context()
    socket = context.socket(zmq.PAIR)
    socket.connect("tcp://localhost:%s" % port)

    try:
        process_msg(socket),
    except KeyboardInterrupt:
        log.debug("iperf_driver exits")


if __name__ == "__main__":
    try:
        from docopt import docopt
    except:
        print("""
        Please install docopt using:
            pip install docopt==0.6.1
        For more refer to:
        https://github.com/docopt/docopt
        """)
        raise

    args = docopt(__doc__, version=__version__)

    log_level = logging.INFO  # default
    if args['--verbose']:
        log_level = logging.DEBUG
    elif args['--quiet']:
        log_level = logging.ERROR

    logging.basicConfig(level=log_level,
        format='%(asctime)s - %(name)s.%(funcName)s() - %(levelname)s - %(message)s')

    main(args)
